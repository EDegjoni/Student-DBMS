/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package studentManagement;

import java.sql.*;
import java.util.*;
import java.util.regex.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.*;


/**
 *
 * @author ASUS
 */
public class userInterface extends javax.swing.JFrame {

    /**
     * Establishing variables for Connections and Prepared Statements.
     */
    Connection con1;
    PreparedStatement insert;
    
    /**
     * Initializes the GUI components.
     * Displays the table obtained from our database.
     */
    public userInterface() {
        initComponents();
        tableShowcase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * Contains all the GUI components.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        phoneField = new javax.swing.JTextField();
        degreeField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("STUDENT DATABASE");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Phone Num:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Degree");

        phoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneFieldActionPerformed(evt);
            }
        });

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setText("EDIT");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField)
                            .addComponent(phoneField)
                            .addComponent(degreeField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(degreeField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone Number", "Degree"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void phoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneFieldActionPerformed
        
    }//GEN-LAST:event_phoneFieldActionPerformed
   
    /**
     * Event for the edit button.
     * After selecting a row from the table, we then acquire its values.
     * After establishing a DB connection, we then change the data to be the same as our new text field input.
     * Contains regular expression validation for phone numbers.
     * @param evt 
     */
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        
        DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
        int rowSelection = jTable1.getSelectedRow();
        String validNum = phoneField.getText();
        boolean match;
        
        if(match = validNum.matches("0?\\d{9}")) {
            try {
            int id = Integer.parseInt(table.getValueAt(rowSelection, 0).toString());
            
            String name = nameField.getText();
            int number = Integer.parseInt(phoneField.getText());
            String degree = degreeField.getText();
            
            Class.forName("com.mysql.jdbc.Driver");
            
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/student dbms","root","");
            insert = con1.prepareStatement("update studentrecords set name = ?, number = ?, degree = ? where id = ?");
            insert.setString(1, name);
            insert.setInt(2, number);
            insert.setString(3, degree);
            insert.setInt(4, id);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Data updated successfully!");
            tableShowcase();
            
            nameField.setText("");
            phoneField.setText("");
            degreeField.setText("");
            nameField.requestFocus();
         }
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        
        else {
            JOptionPane.showMessageDialog(this,"Phone input invalid! Please enter a number with 9 digits!");
        }
        
    }//GEN-LAST:event_editButtonActionPerformed
    
    /**
     * Method used to gain and display the contents of our database table.
     * After establishing a connection, we use ResultSets to gain contents of columns.
     * Initializes an empty table, then while loop slowly fills it.
     * For loop nested in while loop gains the database information through vectors.
     */
    private void tableShowcase() {
        int i;
        try {
           Class.forName("com.mysql.jdbc.Driver");
            
           con1 = DriverManager.getConnection("jdbc:mysql://localhost/student dbms","root","");
           insert = con1.prepareStatement("select * from studentrecords");
           
           ResultSet rSet = insert.executeQuery();
           ResultSetMetaData rSetDisplay = rSet.getMetaData();
           i = rSetDisplay.getColumnCount();
           
           DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
           table.setRowCount(0);
           
           while(rSet.next()) {
               Vector vec = new Vector();
               
               for(int j = 1; j <= i; j++) {
                   vec.add(rSet.getString("id"));
                   vec.add(rSet.getString("name"));
                   vec.add(rSet.getString("number"));
                   vec.add(rSet.getString("degree"));
               }
               
               table.addRow(vec);
               
           }
        }
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Method used to add a new entry into the database.
     * It first initializes a connection, and then obtains the input of every text field.
     * Then, it inserts them into the database, before updating to save the information.
     * Contains regular expression validation for phone numbers.
     * @param evt 
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String name = nameField.getText();
        int number = Integer.parseInt(phoneField.getText());
        String degree = degreeField.getText();
        String validNum = phoneField.getText();
        boolean match;
        
        if(match = validNum.matches("0?\\d{9}")) {
            try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/student dbms","root","");
            insert = con1.prepareStatement("insert into studentrecords(name,number,degree)values(?,?,?)");
            insert.setString(1, name);
            insert.setInt(2, number);
            insert.setString(3, degree);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Data added!");
            tableShowcase();
            
            nameField.setText("");
            phoneField.setText("");
            degreeField.setText("");
            nameField.requestFocus();
         }
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        
        else {
            JOptionPane.showMessageDialog(this,"Phone input invalid! Please enter a number with 9 digits!");
        }
        
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * Used to save and showcase a selection of a row on our GUI table.
     * Changes the text field contents into the row's own contents for the purposes of edits.
     * @param evt 
     */
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
        int rowSelection = jTable1.getSelectedRow();
        
        nameField.setText(table.getValueAt(rowSelection, 1).toString());
        phoneField.setText(table.getValueAt(rowSelection, 2).toString());
        degreeField.setText(table.getValueAt(rowSelection, 3).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * Method used to delete an entry in the database.
     * After selecting a row, a prompt is issued to ask the user if they're sure.
     * After a connection is formed, a delete command is issued to wipe the data off the DB.
     * Finally, the data gets updated, and table redisplayed.
     * @param evt 
     */
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
        int rowSelection = jTable1.getSelectedRow();
        
        try {
            int id = Integer.parseInt(table.getValueAt(rowSelection, 0).toString());
            
            int decision = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this entry?", "Entry Deletion.", JOptionPane.YES_NO_OPTION);
            
            if(decision == JOptionPane.YES_OPTION) {
                Class.forName("com.mysql.jdbc.Driver");
            
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/student dbms","root","");
            insert = con1.prepareStatement("delete from studentrecords where id = ?");
            insert.setInt(1, id);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Data deleted!");
            tableShowcase();
            
            nameField.setText("");
            phoneField.setText("");
            degreeField.setText("");
            nameField.requestFocus();
            }
        }
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField degreeField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField phoneField;
    // End of variables declaration//GEN-END:variables
}
